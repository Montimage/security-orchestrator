description: Heat template to deploy vFirewall demo app for OpenECOMP
heat_template_version: 2013-05-23
parameters:
  dcae_collector_ip:
    description: IP address of the DCAE collector
    label: DCAE collector IP address
    type: string
  dcae_collector_port:
    description: Port of the DCAE collector
    label: DCAE collector port
    type: string
  demo_artifacts_version:
    description: Artifacts (jar, tar.gz) version used in demo vnfs
    label: Artifacts version used in demo vnfs
    type: string
  ecomp_private_net_cidr:
    description: The CIDR of the protected private network
    label: ECOMP private network CIDR
    type: string
  ecomp_private_net_id:
    description: Private network that connects ECOMP component and the VNF
    label: ECOMP management network name or ID
    type: string
  ecomp_private_subnet_id:
    description: Private sub-network that connects ECOMP component and the VNF
    label: ECOMP management sub-network name or ID
    type: string
  key_name:
    description: Public/Private key pair name
    label: Key pair name
    type: string
  protected_private_net_cidr:
    description: The CIDR of the protected private network
    label: Protected private network CIDR
    type: string
  protected_private_net_id:
    description: Private network that connects vFirewall with vSink
    label: Protected private network name or ID
    type: string
  pub_key:
    description: Public key to be installed on the compute instance
    label: Public key
    type: string
  public_net_id:
    description: Public network that enables remote connection to VNF
    label: Public network name or ID
    type: string
  repo_url_artifacts:
    description: URL of the repository that hosts the demo packages
    label: Repository URL
    type: string
  repo_url_blob:
    description: URL of the repository that hosts the demo packages
    label: Repository URL
    type: string
  unprotected_private_net_cidr:
    description: The CIDR of the unprotected private network
    label: Unprotected private network CIDR
    type: string
  unprotected_private_net_id:
    description: Private network that connects vPacketGenerator with vFirewall
    label: Unprotected private network name or ID
    type: string
  vf_module_id:
    description: The vFirewall Module ID is provided by ECOMP
    label: vFirewall module ID
    type: string
  vfw_flavor_name:
    description: Type of instance (flavor) to be used
    label: Flavor
    type: string
  vfw_image_name:
    description: Image to be used for compute instance
    label: Image name or ID
    type: string
  vfw_name_0:
    description: Name of the vFirewall
    label: vFirewall name
    type: string
  vfw_private_ip_0:
    description: Private IP address that is assigned to the vFirewall to communicate
      with the vPacketGenerator
    label: vFirewall private IP address towards the unprotected network
    type: string
  vfw_private_ip_1:
    description: Private IP address that is assigned to the vFirewall to communicate
      with the vSink
    label: vFirewall private IP address towards the protected network
    type: string
  vfw_private_ip_2:
    description: Private IP address that is assigned to the vFirewall to communicate
      with ECOMP components
    label: vFirewall private IP address towards the ECOMP management network
    type: string
  vnf_id:
    description: The VNF ID is provided by ECOMP
    label: VNF ID
    type: string
  vpg_name_0:
    description: Name of the vPacketGenerator
    label: vPacketGenerator name
    type: string
  vpg_private_ip_0:
    description: Private IP address that is assigned to the vPacketGenerator to communicate
      with the vFirewall
    label: vPacketGenerator private IP address towards the unprotected network
    type: string
  vpg_private_ip_1:
    description: Private IP address that is assigned to the vPacketGenerator to communicate
      with ECOMP components
    label: vPacketGenerator private IP address towards the ECOMP management network
    type: string
  vsn_name_0:
    description: Name of the vSink
    label: vSink name
    type: string
  vsn_private_ip_0:
    description: Private IP address that is assigned to the vSink to communicate with
      the vFirewall
    label: vSink private IP address towards the protected network
    type: string
  vsn_private_ip_1:
    description: Private IP address that is assigned to the vSink to communicate with
      ECOMP components
    label: vSink private IP address towards the ECOMP management network
    type: string
resources:
  my_keypair:
    properties:
      name:
        str_replace:
          params:
            base:
              get_param: key_name
            rand:
              get_resource: random-str
          template: base_rand
      public_key:
        get_param: pub_key
      save_private_key: false
    type: OS::Nova::KeyPair
  protected_private_network:
    properties:
      name:
        get_param: protected_private_net_id
    type: OS::Neutron::Net
  protected_private_subnet:
    properties:
      cidr:
        get_param: protected_private_net_cidr
      network_id:
        get_resource: protected_private_network
    type: OS::Neutron::Subnet
  random-str:
    properties:
      length: 4
    type: OS::Heat::RandomString
  unprotected_private_network:
    properties:
      name:
        get_param: unprotected_private_net_id
    type: OS::Neutron::Net
  unprotected_private_subnet:
    properties:
      cidr:
        get_param: unprotected_private_net_cidr
      network_id:
        get_resource: unprotected_private_network
    type: OS::Neutron::Subnet
  vfw_0:
    properties:
      flavor:
        get_param: vfw_flavor_name
      image:
        get_param: vfw_image_name
      key_name:
        get_resource: my_keypair
      metadata:
        vf_module_id:
          get_param: vf_module_id
        vnf_id:
          get_param: vnf_id
      name:
        get_param: vfw_name_0
      networks:
      - network:
          get_param: public_net_id
      - port:
          get_resource: vfw_private_0_port
      - port:
          get_resource: vfw_private_1_port
      - port:
          get_resource: vfw_private_2_port
      user_data:
        str_replace:
          params:
            __dcae_collector_ip__:
              get_param: dcae_collector_ip
            __dcae_collector_port__:
              get_param: dcae_collector_port
            __demo_artifacts_version__:
              get_param: demo_artifacts_version
            __repo_url_artifacts__:
              get_param: repo_url_artifacts
            __repo_url_blob__:
              get_param: repo_url_blob
          template: '#!/bin/bash


            DCAE_COLLECTOR_IP=__dcae_collector_ip__

            DCAE_COLLECTOR_PORT=__dcae_collector_port__

            REPO_URL_BLOB=__repo_url_blob__

            REPO_URL_ARTIFACTS=__repo_url_artifacts__

            DEMO_ARTIFACTS_VERSION=__demo_artifacts_version__


            # Download required dependencies

            add-apt-repository -y ppa:openjdk-r/ppa

            apt-get update

            apt-get install -y make wget openjdk-8-jdk gcc libcurl4-openssl-dev python-pip
            bridge-utils apt-transport-https ca-certificates

            apt-get install -y maven

            pip install jsonschema


            # Download vFirewall code for virtual firewall

            mkdir /opt/config

            mkdir /opt/honeycomb

            cd /opt

            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/v_firewall_init.sh

            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/vfirewall.sh


            mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DremoteRepositories=$REPO_URL_ARTIFACTS
            -Dartifact=org.openecomp.demo.vnf:sample-distribution:$DEMO_ARTIFACTS_VERSION:tar.gz:hc
            -Dtransitive=false -Ddest=.

            mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DremoteRepositories=$REPO_URL_ARTIFACTS
            -Dartifact=org.openecomp.demo.vnf.ves:ves:$DEMO_ARTIFACTS_VERSION:tar.gz:demo
            -Dtransitive=false -Ddest=.

            mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DremoteRepositories=$REPO_URL_ARTIFACTS
            -Dartifact=org.openecomp.demo.vnf.ves:ves_vfw_reporting:$DEMO_ARTIFACTS_VERSION:tar.gz:demo
            -Dtransitive=false -Ddest=.


            tar -zxvf ves-$DEMO_ARTIFACTS_VERSION-demo.tar.gz

            mv ves-$DEMO_ARTIFACTS_VERSION VES

            tar -zxvf ves_vfw_reporting-$DEMO_ARTIFACTS_VERSION-demo.tar.gz

            mv ves_vfw_reporting-$DEMO_ARTIFACTS_VERSION VESreporting_vFW

            tar -zxvf sample-distribution-$DEMO_ARTIFACTS_VERSION-hc.tar.gz

            mv sample-distribution-$DEMO_ARTIFACTS_VERSION honeycomb

            sed -i ''s/"restconf-binding-address": "127.0.0.1",/"restconf-binding-address":
            "0.0.0.0",/g'' honeycomb/sample-distribution-$DEMO_ARTIFACTS_VERSION/config/honeycomb.json

            mv VESreporting_vFW /opt/VES/code/evel_training/VESreporting

            rm *.tar.gz

            chmod +x v_firewall_init.sh

            chmod +x vfirewall.sh

            echo $DCAE_COLLECTOR_IP > config/dcae_collector_ip.txt

            echo $DCAE_COLLECTOR_PORT > config/dcae_collector_port.txt

            echo $DEMO_ARTIFACTS_VERSION > config/artifacts_version.txt


            # Install VPP

            export UBUNTU="trusty"

            export RELEASE=".stable.1609"

            rm /etc/apt/sources.list.d/99fd.io.list

            echo "deb [trusted=yes] https://nexus.fd.io/content/repositories/fd.io$RELEASE.ubuntu.$UBUNTU.main/
            ./" | sudo tee -a /etc/apt/sources.list.d/99fd.io.list

            apt-get update

            apt-get install -y vpp vpp-dpdk-dkms vpp-lib vpp-dbg vpp-plugins vpp-dev

            sleep 1


            # Install VES

            cd /opt/VES/bldjobs/

            make clean

            make

            sleep 1


            # Run instantiation script

            cd /opt

            mv vfirewall.sh /etc/init.d

            update-rc.d vfirewall.sh defaults

            ./v_firewall_init.sh


            ./update_firewall.sh block __object__'
      user_data_format: RAW
    type: OS::Nova::Server
  vfw_private_0_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vfw_private_ip_0
        subnet:
          get_resource: unprotected_private_subnet
      network:
        get_resource: unprotected_private_network
    type: OS::Neutron::Port
  vfw_private_1_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vfw_private_ip_1
        subnet:
          get_resource: protected_private_subnet
      network:
        get_resource: protected_private_network
    type: OS::Neutron::Port
  vfw_private_2_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vfw_private_ip_2
        subnet:
          get_param: ecomp_private_subnet_id
      network:
        get_param: ecomp_private_net_id
    type: OS::Neutron::Port
  vpg_0:
    properties:
      flavor:
        get_param: vfw_flavor_name
      image:
        get_param: vfw_image_name
      key_name:
        get_resource: my_keypair
      metadata:
        vf_module_id:
          get_param: vf_module_id
        vnf_id:
          get_param: vnf_id
      name:
        get_param: vpg_name_0
      networks:
      - network:
          get_param: public_net_id
      - port:
          get_resource: vpg_private_0_port
      - port:
          get_resource: vpg_private_1_port
      user_data:
        str_replace:
          params:
            __demo_artifacts_version__:
              get_param: demo_artifacts_version
            __fw_ipaddr__:
              get_param: vfw_private_ip_0
            __protected_net_cidr__:
              get_param: protected_private_net_cidr
            __repo_url_artifacts__:
              get_param: repo_url_artifacts
            __repo_url_blob__:
              get_param: repo_url_blob
            __sink_ipaddr__:
              get_param: vsn_private_ip_0
          template: "#!/bin/bash\n\nFW_IPADDR=__fw_ipaddr__\nPROTECTED_NET_CIDR=__protected_net_cidr__\n\
            SINK_IPADDR=__sink_ipaddr__\nREPO_URL_BLOB=__repo_url_blob__\nREPO_URL_ARTIFACTS=__repo_url_artifacts__\n\
            DEMO_ARTIFACTS_VERSION=__demo_artifacts_version__\n\n# Download required\
            \ dependencies\nadd-apt-repository -y ppa:openjdk-r/ppa\napt-get update\n\
            apt-get install -y make wget openjdk-8-jdk gcc libcurl4-openssl-dev python-pip\
            \ bridge-utils apt-transport-https ca-certificates\napt-get install -y\
            \ maven\npip install jsonschema\n\n# Download vFirewall demo code for\
            \ packet generator\nmkdir /opt/config\nmkdir /opt/honeycomb\ncd /opt\n\
            \nwget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/v_packetgen_init.sh\n\
            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/vpacketgen.sh\n\
            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/run_traffic_fw_demo.sh\n\
            \nmvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DremoteRepositories=$REPO_URL_ARTIFACTS\
            \ -Dartifact=org.openecomp.demo.vnf:sample-distribution:$DEMO_ARTIFACTS_VERSION:tar.gz:hc\
            \ -Dtransitive=false -Ddest=.\nmvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get\
            \ -DremoteRepositories=$REPO_URL_ARTIFACTS -Dartifact=org.openecomp.demo.vnf.vfw:vfw_pg_streams:$DEMO_ARTIFACTS_VERSION:tar.gz:demo\
            \ -Dtransitive=false -Ddest=.\n\n\ntar -zxvf sample-distribution-$DEMO_ARTIFACTS_VERSION-hc.tar.gz\n\
            tar -zxvf vfw_pg_streams-$DEMO_ARTIFACTS_VERSION-demo.tar.gz \nmv vfw_pg_streams-$DEMO_ARTIFACTS_VERSION\
            \ pg_streams\nmv sample-distribution-$DEMO_ARTIFACTS_VERSION honeycomb\n\
            sed -i 's/\"restconf-binding-address\": \"127.0.0.1\",/\"restconf-binding-address\"\
            : \"0.0.0.0\",/g' honeycomb/sample-distribution-$DEMO_ARTIFACTS_VERSION/config/honeycomb.json\n\
            rm *.tar.gz\nchmod +x v_packetgen_init.sh\nchmod +x vpacketgen.sh\necho\
            \ $FW_IPADDR > config/fw_ipaddr.txt\necho $PROTECTED_NET_CIDR > config/protected_net_cidr.txt\n\
            echo $SINK_IPADDR > config/sink_ipaddr.txt\necho $DEMO_ARTIFACTS_VERSION\
            \ > config/artifacts_version.txt\n\n# Install VPP\nexport UBUNTU=\"trusty\"\
            \nexport RELEASE=\".stable.1609\"\nrm /etc/apt/sources.list.d/99fd.io.list\n\
            echo \"deb [trusted=yes] https://nexus.fd.io/content/repositories/fd.io$RELEASE.ubuntu.$UBUNTU.main/\
            \ ./\" | sudo tee -a /etc/apt/sources.list.d/99fd.io.list\napt-get update\n\
            apt-get install -y vpp vpp-dpdk-dkms vpp-lib vpp-dbg vpp-plugins vpp-dev\n\
            sleep 1\n\n# Run instantiation script\ncd /opt\nmv vpacketgen.sh /etc/init.d\n\
            update-rc.d vpacketgen.sh defaults\n./v_packetgen_init.sh\n"
      user_data_format: RAW
    type: OS::Nova::Server
  vpg_private_0_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vpg_private_ip_0
        subnet:
          get_resource: unprotected_private_subnet
      network:
        get_resource: unprotected_private_network
    type: OS::Neutron::Port
  vpg_private_1_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vpg_private_ip_1
        subnet:
          get_param: ecomp_private_subnet_id
      network:
        get_param: ecomp_private_net_id
    type: OS::Neutron::Port
  vsn_0:
    properties:
      flavor:
        get_param: vfw_flavor_name
      image:
        get_param: vfw_image_name
      key_name:
        get_resource: my_keypair
      metadata:
        vf_module_id:
          get_param: vf_module_id
        vnf_id:
          get_param: vnf_id
      name:
        get_param: vsn_name_0
      networks:
      - network:
          get_param: public_net_id
      - port:
          get_resource: vsn_private_0_port
      - port:
          get_resource: vsn_private_1_port
      user_data:
        str_replace:
          params:
            __demo_artifacts_version__:
              get_param: demo_artifacts_version
            __protected_net_gw__:
              get_param: vfw_private_ip_1
            __repo_url_artifacts__:
              get_param: repo_url_artifacts
            __repo_url_blob__:
              get_param: repo_url_blob
            __unprotected_net__:
              get_param: unprotected_private_net_cidr
          template: '#!/bin/bash


            PROTECTED_NET_GW=__protected_net_gw__

            UNPROTECTED_NET=__unprotected_net__

            UNPROTECTED_NET=$(echo $UNPROTECTED_NET | cut -d''/'' -f1)

            REPO_URL_BLOB=__repo_url_blob__

            REPO_URL_ARTIFACTS=__repo_url_artifacts__

            DEMO_ARTIFACTS_VERSION=__demo_artifacts_version__


            # Download required dependencies

            add-apt-repository -y ppa:openjdk-r/ppa

            apt-get update

            apt-get install -y make wget openjdk-8-jdk apt-transport-https ca-certificates
            darkstat


            # Configure and run darkstat

            sed -i "s/START_DARKSTAT=.*/START_DARKSTAT=yes/g" /etc/darkstat/init.cfg

            sed -i "s/INTERFACE=.*/INTERFACE=\"-i eth1\"/g" /etc/darkstat/init.cfg

            /etc/init.d/darkstat start


            mkdir /opt/config

            cd /opt

            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/v_sink_init.sh

            wget $REPO_URL_BLOB/org.openecomp.demo/vnfs/vfw/$DEMO_ARTIFACTS_VERSION/vsink.sh

            chmod +x v_sink_init.sh

            chmod +x vsink.sh

            echo $PROTECTED_NET_GW > config/protected_net_gw.txt

            echo $UNPROTECTED_NET > config/unprotected_net.txt

            mv vsink.sh /etc/init.d

            update-rc.d vsink.sh defaults

            ./v_sink_init.sh

            '
      user_data_format: RAW
    type: OS::Nova::Server
  vsn_private_0_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vsn_private_ip_0
        subnet:
          get_resource: protected_private_subnet
      network:
        get_resource: protected_private_network
    type: OS::Neutron::Port
  vsn_private_1_port:
    properties:
      fixed_ips:
      - ip_address:
          get_param: vsn_private_ip_1
        subnet:
          get_param: ecomp_private_subnet_id
      network:
        get_param: ecomp_private_net_id
    type: OS::Neutron::Port
