imports:
  - data.yaml
  - doctor_nodes.yaml

tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: Template for deploying a single server with predefined properties.

metadata:
  template_name: TOSCA NFV toy example

topology_template:
  node_templates:

    router_1:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 1
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU1

    router_2:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 2
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU2

    router_3:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 3
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU3

    router_4:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 4
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU4

    router_5:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 5
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU5

    router_6:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 6
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU6

    router_7:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 7
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU7

    VDU1:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU1
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == netherlands']

    VDU2:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU2
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == netherlands']

    VDU3:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU3
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == uk']

    VDU4:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU4
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == uk']

    VDU5:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU5
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == netherlands']

    VDU6:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU6
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == germany']

    VDU7:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU7
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == germany']


    VDU1_VL1_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU1_VL1_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL1
        - virtual_binding: VDU1

    VDU2_VL1_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU2_VL1_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL1
        - virtual_binding: VDU2

    VDU2_VL2_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU2_VL2_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL2
        - virtual_binding: VDU2

    VDU2_VL5_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU2_VL5_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL5
        - virtual_binding: VDU2

    VDU3_VL2_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU3_VL2_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL2
        - virtual_binding: VDU3

    VDU3_VL3_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU3_VL3_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL3
        - virtual_binding: VDU3

    VDU4_VL3_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU4_VL3_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL3
        - virtual_binding: VDU4

    VDU5_VL5_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU5_VL5_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL5
        - virtual_binding: VDU5

    VDU5_VL6_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU5_VL6_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL6
        - virtual_binding: VDU5

    VDU6_VL6_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU6_VL6_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL6
        - virtual_binding: VDU6

    VDU6_VL7_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU6_VL7_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL7
        - virtual_binding: VDU6

    VDU7_VL7_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU7_VL7_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL7
        - virtual_binding: VDU7


    VL1:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL1
        connectivity_type: VXLAN

    VL2:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL2
        connectivity_type: VXLAN

    VL3:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL3
        connectivity_type: VXLAN

    VL5:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL5
        connectivity_type: VXLAN

    VL6:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL6
        connectivity_type: VXLAN

    VL7:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL7
        connectivity_type: VXLAN

    http_from_r1_to_r2:
      type: tosca.nodes.nfv.doctor.FP
      description: http from r1 to r2
      properties:
        id: 1
        policy:
          type: NDN
          prefix: [/http]
        path:
          - forwarder: router_1
            capability: VDU1_VL1_CP
          - forwarder: router_2
            capability: VDU2_VL1_CP

    http_from_r2_to_r4:
      type: tosca.nodes.nfv.doctor.FP
      description: http from r2 to r4
      properties:
        id: 2
        policy:
          type: NDN
          prefix: [/http]
        path:
          - forwarder: router_2
            capability: VDU2_VL2_CP
          - forwarder: router_3
            capability: VDU3_VL2_CP
          - forwarder: router_3
            capability: VDU3_VL3_CP
          - forwarder: router_4
            capability: VDU4_VL3_CP

    http_from_r2_to_r7:
      type: tosca.nodes.nfv.doctor.FP
      description: http from r2 to r7
      properties:
        id: 3
        policy:
          type: NDN
          prefix: [/http]
        path:
          - forwarder: router_2
            capability: VDU2_VL5_CP

          - forwarder: router_5
            capability: VDU5_VL5_CP

          - forwarder: router_5
            capability: VDU5_VL6_CP

          - forwarder: router_6
            capability: VDU6_VL6_CP

          - forwarder: router_6
            capability: VDU6_VL7_CP

          - forwarder: router_7
            capability: VDU7_VL7_CP

  groups:
    VNFFG1:
      type: tosca.groups.nfv.doctor.VNFFG
      description: http paths
      properties:
        vendor: Doctor
        version: 1.0
        dependent_virtual_link: [VL1, VL2, VL3, VL5, VL6, VL7]
        connection_point: [router_1, router_2, router_3, router_4, router_5, router_6, router_7]
        constituent_vnfs: [VDU1_VL1_CP]
      members: [http_from_r1_to_r2, http_from_r2_to_r7, http_from_r2_to_r4]
