imports:
  - data.yaml
  - doctor_nodes.yaml

tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: Template for deploying a single server with predefined properties.

metadata:
  template_name: TOSCA NFV toy example

topology_template:
  node_templates:

    ingress_gateway_1:
      type: tosca.nodes.nfv.doctor.VNF.ingressGW
      properties:
        id: 1
        ndn_name: /igw1
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU1

    router_1:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 2
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU2

    router_2:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 3
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU3

    firewall_1:
      type: tosca.nodes.nfv.doctor.VNF.firewall
      properties:
        id: 5
        vendor: orange
        version: 1.0
        configuration:
          mode: drop
          rules:
            - action: append-accept
              prefix: [/http/fr/zdnet]
      requirements:
        - VDU: VDU5

    egress_gateway_1:
      type: tosca.nodes.nfv.doctor.VNF
      properties:
        id: 7
        ndn_name: /http
        vendor: orange
        version: 1.0
      requirements:
        - VDU: VDU7


    VDU1:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU1
        sw_image: maouadj/ingress_gateway:v1
        config: /doctor/launch_ingress_gateway.sh
        service_port: 3666
        flavor: medium
        placement_policy: ['popLocation == france']

    VDU2:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU2
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == france']

    VDU3:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU3
        sw_image: maouadj/ndn_router:v1
        config: /doctor/launch_nfd_router.sh
        flavor: medium
        placement_policy: ['popLocation == germany']


    VDU5:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU5
        sw_image: maouadj/ndn_firewall:v1
        config: /doctor/launch_ndn_firewall.sh
        flavor: medium
        placement_policy: ['popLocation == uk']


    VDU7:
      type: tosca.nodes.nfv.doctor.VDU
      properties:
        name: VDU7
        sw_image: maouadj/egress_gateway:v1
        config: /doctor/launch_egress_gateway.sh
        flavor: medium
        placement_policy: ['popLocation == uk']


    VDU1_VL1_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU1_VL1_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL1
        - virtual_binding: VDU1

    VDU2_VL1_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU2_VL1_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL1
        - virtual_binding: VDU2

    VDU2_VL2_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU2_VL2_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL2
        - virtual_binding: VDU2

    VDU3_VL3_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU3_VL3_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL3
        - virtual_binding: VDU3

    VDU3_VL4_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU3_VL4_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL4
        - virtual_binding: VDU3


    VDU5_VL2_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU5_VL2_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL2
        - virtual_binding: VDU5

    VDU5_VL3_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU5_VL2_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL3
        - virtual_binding: VDU5


    VDU7_VL4_CP:
      type: tosca.nodes.nfv.doctor.Cpd
      properties:
        name: VDU7_VL4_CP
        layer_protocol: VXLAN
      requirements:
        - virtual_link: VL4
        - virtual_binding: VDU7


    VL1:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL1
        connectivity_type: VXLAN

    VL2:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL2
        connectivity_type: VXLAN

    VL3:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL3
        connectivity_type: VXLAN

    VL4:
      type: tosca.nodes.nfv.doctor.VnfVirtualLinkDesc
      properties:
        name: VL4
        connectivity_type: VXLAN


##########################################################################
 # Forwarding paths
##########################################################################


    http_from_ingress1_to_egress1:
      type: tosca.nodes.nfv.doctor.FP
      description: creates path for /http from ingress_1 to egress_1
      properties:
        id: 1
        policy:
          type: NDN
          prefix: [/http]
        path:
          - forwarder: ingress_gateway_1
            capability: VDU1_VL1_CP
          - forwarder: router_1
            capability: VDU2_VL1_CP
          - forwarder: router_1
            capability: VDU2_VL2_CP
          - forwarder: firewall_1
            capability: VDU5_VL2_CP
          - forwarder: firewall_1
            capability: VDU5_VL3_CP
          - forwarder: router_2
            capability: VDU3_VL3_CP
          - forwarder: router_2
            capability: VDU3_VL4_CP
          - forwarder: egress_gateway_1
            capability: VDU7_VL4_CP

    http_from_egress1_to_ingress1:
      type: tosca.nodes.nfv.doctor.FP
      description: creates path for /http from ingress_1 to egress_1
      properties:
        id: 1
        policy:
          type: NDN
          prefix: [/igw1]
        path:
          - forwarder: egress_gateway_1
            capability: VDU7_VL4_CP
          - forwarder: router_2
            capability: VDU3_VL4_CP
          - forwarder: router_2
            capability: VDU3_VL3_CP
          - forwarder: firewall_1
            capability: VDU5_VL3_CP
          - forwarder: firewall_1
            capability: VDU5_VL2_CP
          - forwarder: router_1
            capability: VDU2_VL2_CP
          - forwarder: router_1
            capability: VDU2_VL1_CP
          - forwarder: ingress_gateway_1
            capability: VDU1_VL1_CP

##########################################################################
 # Forwarding graph
##########################################################################

  groups:
    VNFFG1:
      type: tosca.groups.nfv.doctor.VNFFG
      description: FR and COM interest to egress_gw
      properties:
        vendor: Doctor
        version: 1.0
        dependent_virtual_link: [VL1, VL2, VL3, VL4]
        connection_point: [ingress_gateway_1]
        constituent_vnfs: [VDU1_VL1_CP]
      members: [http_from_ingress1_to_egress1, http_from_egress1_to_ingress1]